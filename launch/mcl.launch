<?xml version="1.0"?>

<launch>

  <!-- For the mcl_gpu package to work, a map needs to be loaded first -->
  <include file="$(find mcl_gpu)/launch/map_server.launch"/>

  <!-- Launch the racecar model -->
  <include file="$(find f1tenth_simulator)/launch/racecar_model.launch"/>

  <!-- arguments
       which_impl: choose the implementation of the MCL algorithm
                   - cpu: sequential implementation on CPU
                   - gpu: CUDA implementation on GPU
                   - adaptive: heterogeneous implementation on CPU + GPU
       which_rm  : choose the implementation of the ray marching algorithm
                   - rm: CPU implementation ==> RayMarching
                   - rmgpu: GPU implementation ==> RayMarchingGPU
       which_viz : choose which particles for visualization
                   - first: select the first n particles in the population
                   - largest: select the n particles with largest weights
       which_expect: choose how to compute the expected pose from the population
                   - largest: pick the particle with the largest weight
                   - ave: compute the weighted average of all particles
  -->
  <arg name="scan_topic" default="/scan"/>
  <!-- <arg name="odometry_topic" default="/vesc/odom"/> -->
  <arg name="odometry_topic" default="/odom"/>
  <arg name="angle_step" default="18"/>
  <arg name="max_particles" default="10"/>
  <arg name="squash_factor" default="2.2"/>
  <arg name="viz" default="1"/>
  <arg name="which_impl" default="cpu"/>
  <arg name="which_rm" default="rmgpu"/>
  <arg name="which_viz" default="largest"/>
  <arg name="which_expect" default="largest"/>

  <!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find mcl_gpu)/rviz/pf.rviz" /> -->

  <node pkg="mcl_gpu" type="mcl_gpu" name="mcl_gpu" output="screen">
    <param name="which_rm" value="$(arg which_rm)"/>
    <param name="which_impl" value="$(arg which_impl)"/>
    <param name="scan_topic" value="$(arg scan_topic)"/>
    <param name="odometry_topic" value="$(arg odometry_topic)"/>
    <!-- range data is downsampled by this factor -->
    <param name="angle_step" value="$(arg angle_step)"/>
    <param name="max_particles" value="$(arg max_particles)"/>
    <param name="max_viz_particles" value="200"/>
    <param name="squash_factor" value="$(arg squash_factor)"/>
    <param name="theta_discretization" value="112"/>
    <!-- max sensor range in meters -->
    <param name="max_range" value="10"/>
    <param name="viz" value="$(arg viz)"/>
    <param name="fine_timing" value="0"/>
    <param name="publish_odom" value="1"/>

    <!-- sensor model constants, see sensor model section in the Lab5 guide document -->
    <param name="z_short" value="0.01"/>
    <param name="z_max" value="0.07"/>
    <param name="z_rand" value="0.12"/>
    <param name="z_hit" value="0.75"/>
    <param name="sigma_hit" value="8.0"/>

    <!-- motion model dispersion constant, this could be improved. Large values will spread out
	 the particle distribution more. Too much and it is overly computational to represent the
	 true prob. dist, too little and the particle filter can diverge at high speeds where the
	 ackermann motion model is inaccurate
    -->
    <param name="motion_dispersion_x" value="0.05"/>
    <param name="motion_dispersion_y" value="0.025"/>
    <param name="motion_dispersion_theta" value="0.025"/>

  </node>
</launch>
